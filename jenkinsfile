pipeline {
    agent any
     environment {
        projectName = "test-project"
    }

    stages {
        stage('Checkout source code') {
            steps{
                script {

                withCredentials([string(credentialsId: 'cf_password', variable: 'cf_password')]) {
                sh "cf login -a https://api.cf.ap21.hana.ondemand.com -u preeti.baddi@sap.com -p ${cf_password}"
                sh "echo running "
            }
            }
        }
     }
        stage('Build') {
            steps {
                // nodejs(nodeJSInstallationName: 'Node') {
                //     bat 'npm install -g node-gyp'
                //     bat 'npm i'
                //     bat 'npm run start'
                // }
                sh 'npm i'

            }
            
        }
        // stage('Test') {
        //     steps {
        //         bat 'npm run start'
        //     } 
        // }        

        
        //     stage ("SonarQube Scan") {
        //         steps {
        //             withEnv(["PATH=C:/Users/I526042/Downloads/sonarqube-developer-9.7.1.62043/sonarqube-9.7.1.62043/bin"]) {
        //                 withSonarQubeEnv('sonar-assignement') { 
        //                 bat "sonar-scanner \
        //                     -Dsonar.projectKey=${projectName} \
        //                     -Dsonar.sources=. \
        //                     -Dsonar.host.url=${env.SONAR_HOST_URL} \
        //                     -Dsonar.login=${env.SONAR_AUTH_TOKEN} \
        //                     -Dsonar.projectName=${projectName} \
        //                     -Dsonar.projectVersion=${env.BUILD_ID}"
        //             }
        //          }
        //     }
        // }

            stage('Build & Package') {
                steps{
                     withSonarQubeEnv('DevOps-assignment') {
                    sh "npm install sonar-scanner"
                     sh 'node_modules/sonar-scanner/bin/sonar-scanner'
                    }
                    
                }
            }

            stage("Deploy") {
                steps{ 
                    sh "mbt build -s ."
                    sh  "cf install-plugin multiapps -f"
                    sh "cf deploy mta_archives/devOps_1.0.0.mtar"
            }
        }
    }
}
