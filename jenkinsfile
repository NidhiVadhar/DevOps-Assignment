pipeline {
    agent any
    stages{
        stage('Checkout'){
            steps{
                checkout([$class: 'GitSCM', branches: [[name: '*/mybranch']], userRemoteConfigs: [[url: 'https://github.com/NidhiVadhar/DevOps-Assignment.git']]])
            }
        }
        stage("Build") {
            steps{
                sh "echo '--- Installing node modules ----'"
                sh "npm install"
                withCredentials([string(credentialsId: 'cf_password', variable: 'cf_password')]) {
                sh "cf login -a https://api.cf.ap21.hana.ondemand.com -u preeti.m.baddi@sap.com -p \"${cf_password}\" -o bc7dc041trial -s dev"
                }
            }
        }
//                 stage('SonarQube analysis') {
//                     steps{
//                         sh "sonar-scanner \
//                         -Dsonar.sources=. \
//                         -Dsonar.host.url='https://localhost:9000'\
//                         -Dsonar.login='sqp_d05c195958791d1e3bf97ea583aa718738fa942'\
//     }
//   }
        // stage('Build docker image'){
        //     steps{
        //             sh 'docker build -t sushanthsk/datsec-app:v1 .'
        //     }
        //     post{
        //         success{
        //             script{
        //                 env.build = "success"
        //             }
        //         }
        //     }
        // }
        // stage('Push image to docker Hub'){
        //     when{
        //         expression{
        //             env.build == "success"
        //         }
        //     }
        //     steps{
        //         script {
        //           withCredentials([string(credentialsId: 'dockerpwd', variable: 'docker_pwd')]) {
        //           sh 'docker login -u sushanthsk -p ${docker_pwd}'
        //             }
        //           sh 'docker push sushanthsk/datsec-app:v1'
        //         }
        //     }
        // }
        // stage('Deploy to K8') {
        //     when{
        //         expression{
        //             env.build == "success"
        //         }
        //     }
        //     input{
        //         message "Do you want to proceed for production deployment?"
        //     }
        //     steps{
        //         script {
        //             kubernetesDeploy (configs: 'deployment.yaml', kubeconfigId: 'k8configpwd')
        //             sh 'kubectl rollout restart deployment datsec-app'
        //         }
    //         }
    //     }
    // }
    //     post {
    //     // Clean after build
    //     always {
    //         cleanWs(cleanWhenNotBuilt: false,
    //                 deleteDirs: true,
    //                 disableDeferredWipeout: true,
    //                 notFailBuild: true,
    //                 patterns: [[pattern: '.gitignore', type: 'INCLUDE'],
    //                            [pattern: '.propsfile', type: 'EXCLUDE']])
    //         }
    stage("Deploy") {
                steps{
                    sh "mbt build -s ."
                    sh "cf install-plugin multiapps -f"
                    sh "cf deploy mta_archives/devOps_1.0.0.mtar -f"
            }
        }
}
}